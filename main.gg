// main.gg
// Hello comments!

import "prelude.gg";

i32 main() {
  Vec2I rho;
  rho.x = -2;
  rho.y = 2;

  Vec2I tau;
  tau.x = 6;
  tau.y = 4;

  Vec2I pi = vec_add(rho, tau);

  Vec2 rho2;
  rho2.x = 2.0;
  rho2.y = 2.0;

  Vec2 tau2;
  tau2.x = 6.0;
  tau2.y = 4.0;

  Vec2 pi2 = vec_add(rho2, tau2);


  putchar(pi.x + pi.y + 65);
  return 1;
}

Vec2I vec_add(Vec2I a, Vec2I b) {
  Vec2I retval;
  retval.x = a.x + b.x;
  retval.y = a.y + b.y;
  return retval;
}

Vec2 vec_add(Vec2 a, Vec2 b) {
  Vec2 retval;
  retval.x = add_f32(a.x, b.x);
  retval.y = add_f32(a.y, b.y);
  return retval;
}


//operator overloading
//casting 
//pass by val/ref, return by val/ref
//enums

//constexpr
//pre-main
//other type literals (suffixess)
//error messages
//allocator
//type inference
//slices
//templates
//std lib
//reflection
//case statement
//full llvm parsing
//if statement
//for statement
//named breaks/continue
//scoped functions/types
//capture
//vector types
//perf
//vstudio integration
//better linker integration
//global constants
//non-zero struct defaults

